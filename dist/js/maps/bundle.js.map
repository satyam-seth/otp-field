{"version":3,"sources":["node_modules/browser-pack/_prelude.js","bundle.js","src/ts/components/field.ts","src/ts/main.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","value","OTPField","config","instance","TypeError","_classCallCheck","this","regex","boxCount","setInterval","field","document","createElement","id","className","appendChild","getBox","index","box","namespace","type","maxLength","autocomplete","setAttribute","toString","addEventListener","onBoxChange","bind","onBoxInput","onBoxKeyDown","onBoxFocus","boxId","getElementById","currentBoxIndex","parseInt","getAttribute","focusBoxId","focus","preventDefault","prevBoxId","replace","nextBoxId","element","remove","parentElement","skeleton","get","default","__importDefault","mod","__esModule","field_1","window","onload","build","body"],"mappings":"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","file":"../bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",null,"import { OTPFieldConfig } from './types';\n\nexport default class OTPField {\n  config: OTPFieldConfig;\n\n  // TODO: move it to config and set current value as default\n  regex = /[^0-9]/g;\n\n  value = '';\n\n  constructor(config: OTPFieldConfig) {\n    if (config.boxCount <= 0) {\n      throw new Error('Invalid config box count must be grater than zero.');\n    }\n\n    this.config = config;\n\n    setInterval(() => {\n      // console.log('value =>>> ', this.value);\n    }, 1000);\n  }\n\n  private skeleton(): HTMLElement {\n    const field = document.createElement('div');\n    field.id = this.id;\n    field.className = 'otp-field';\n\n    // eslint-disable-next-line no-plusplus\n    for (let i = 0; i < this.config.boxCount; i++) {\n      field.appendChild(this.getBox(i));\n    }\n\n    return field;\n  }\n\n  private getBox(index: number) {\n    const box = document.createElement('input');\n    box.id = `${this.config.namespace}-box-${index}`;\n    box.type = 'text';\n    box.maxLength = 1;\n    box.autocomplete = 'off';\n    box.setAttribute('data-index', index.toString());\n\n    // TODO: once box is focused user now can able to click on 0 selection position\n    box.addEventListener('change', this.onBoxChange.bind(this));\n    box.addEventListener('input', this.onBoxInput.bind(this));\n    box.addEventListener('keydown', this.onBoxKeyDown.bind(this));\n    box.addEventListener('focus', this.onBoxFocus.bind(this));\n    // box.addEventListener('paste', this.onBoxPaste.bind(this));\n\n    return box;\n  }\n\n  // TODO: after paste only first box is focused\n  // TODO: not working in paste in middle\n  // onBoxPaste(e: any) {\n  //   e.preventDefault();\n\n  //   const pastedText: string = e.clipboardData.getData('text');\n  //   const value = pastedText.replace(this.regex, '');\n\n  //   const currentValueLength = this.value.length;\n  //   for (\n  //     let i = currentValueLength;\n  //     i < this.config.boxCount && i < value.length;\n  //     // eslint-disable-next-line no-plusplus\n  //     i++\n  //   ) {\n  //     const boxId = `${this.config.namespace}-box-${i}`;\n  //     const box = document.getElementById(boxId) as HTMLInputElement;\n  //     box.value = value[i - currentValueLength];\n  //   }\n  // }\n\n  // eslint-disable-next-line no-unused-vars\n  onBoxChange(e: any) {\n    // console.log('change', e);\n    let value = '';\n\n    // eslint-disable-next-line no-plusplus\n    for (let i = 0; i < this.config.boxCount; i++) {\n      const boxId = `${this.config.namespace}-box-${i}`;\n      const box = document.getElementById(boxId) as HTMLInputElement;\n      value += box.value;\n    }\n\n    // console.log('value', this.value, 'new value', value);\n    this.value = value;\n  }\n\n  onBoxFocus(e: any) {\n    // console.log('focus', e);\n    const currentBoxIndex = parseInt(e.target.getAttribute('data-index'), 10);\n    // console.log('focus', currentBoxIndex);\n\n    // 4,3\n    if (\n      currentBoxIndex === this.value.length ||\n      currentBoxIndex === this.value.length - 1\n    ) {\n      return;\n    }\n\n    const focusBoxId = `${this.config.namespace}-box-${this.config.boxCount === this.value.length ? this.value.length - 1 : this.value.length}`;\n    // console.log('update focus', focusBoxId);\n    const focusBox = document.getElementById(focusBoxId)!;\n    focusBox.focus();\n  }\n\n  onBoxKeyDown(e: any) {\n    // console.log('keydown', e);\n    if (\n      e.key === 'ArrowLeft' ||\n      e.key === 'ArrowUp' ||\n      e.key === 'ArrowRight' ||\n      e.key === 'ArrowDown'\n    ) {\n      e.preventDefault(); // Prevent default action of arrow keys\n    }\n\n    if (e.key === 'Backspace' && e.target.value === '') {\n      const currentBoxIndex = parseInt(e.target.getAttribute('data-index'), 10);\n\n      if (currentBoxIndex > 0) {\n        const prevBoxId = `${this.config.namespace}-box-${currentBoxIndex - 1}`;\n        const nextBox = document.getElementById(prevBoxId)!;\n        nextBox.focus();\n      }\n    }\n  }\n\n  onBoxInput(e: any) {\n    // console.log('input', e);\n\n    e.target.value = e.target.value.replace(this.regex, '');\n\n    if (e.target.value === '') return;\n\n    const currentBoxIndex = parseInt(e.target.getAttribute('data-index'), 10);\n\n    if (currentBoxIndex + 1 < this.config.boxCount) {\n      const nextBoxId = `${this.config.namespace}-box-${currentBoxIndex + 1}`;\n      // console.log(nextBoxId);\n      const nextBox = document.getElementById(nextBoxId)!;\n      nextBox.focus();\n    }\n  }\n\n  get id(): string {\n    return `otp-field-${this.config.namespace}`;\n  }\n\n  get element(): HTMLElement {\n    return document.getElementById(this.id)!;\n  }\n\n  destroy(): void {\n    this.element.remove();\n  }\n\n  build(parentElement: HTMLElement) {\n    parentElement.appendChild(this.skeleton());\n  }\n}\n","import OTPField from './components/field';\r\n\r\nwindow.onload = () => {\r\n  // create otp field instance\r\n  const otpField = new OTPField({\r\n    namespace: 'example',\r\n    boxCount: 6,\r\n  });\r\n\r\n  // TODO: add for to get config and add button to show current value \r\n\r\n  // build otp field\r\n  otpField.build(document.body);\r\n};\r\n"]}