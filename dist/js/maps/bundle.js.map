{"version":3,"sources":["node_modules/browser-pack/_prelude.js","bundle.js","src/ts/components/field.ts","src/ts/main.ts","src/ts/utils/logger.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","__importDefault","mod","__esModule","default","value","logger_1","OTPField","config","_this","this","instance","TypeError","_classCallCheck","regex","fieldValue","boxCount","setInterval","info","focusBoxIndex","getBoxValue","focusBox","get","field","document","createElement","id","className","appendChild","getBox","index","namespace","box","dataIndex","getAttribute","parseInt","log","getBoxId","type","maxLength","autocomplete","setAttribute","toString","addEventListener","onBoxInput","bind","onBoxKeyDown","onBoxFocus","onBoxPaste","preventDefault","pastedValue","clipboardData","getData","replace","currentBoxIndex","getBoxIndex","Math","min","setBoxValue","onPasteBlur","blur","updateValue","selectionStart","selectionEnd","focusPrevBox","focusNextBox","updatedValue","currentBox","getBoxAtIndex","focus","boxId","getElementById","element","remove","parentElement","skeleton","field_1","window","onload","build","body","Logger","logLevels","logLevel","Date","toISOString","level","currentLevelIndex","indexOf","shouldLog","_console","_len","arguments","args","Array","_key","console","apply","getTimestamp","concat","_console2","_len2","_key2","error","_console3","_len3","_key3","warn","_console4","_len4","_key4","undefined","_instance"],"mappings":"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","file":"../bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",null,"import Logger from '../utils/logger';\nimport { OTPFieldConfig } from './types';\n\nexport default class OTPField {\n  config: OTPFieldConfig;\n\n  // TODO: move it to config and set current value as default\n  regex = /[^0-9]/g;\n\n  private fieldValue = '';\n\n  get value() {\n    return this.fieldValue;\n  }\n\n  focus() {\n    let focusBoxIndex = this.config.boxCount - 1;\n\n    // eslint-disable-next-line no-plusplus\n    for (let i = 0; i < this.config.boxCount; i++) {\n      if (this.getBoxValue(i) === '') {\n        focusBoxIndex = i;\n        break;\n      }\n    }\n\n    this.focusBox(focusBoxIndex);\n  }\n\n  constructor(config: OTPFieldConfig) {\n    if (config.boxCount <= 0) {\n      throw new Error('Invalid config box count must be grater than zero.');\n    }\n\n    this.config = config;\n\n    setInterval(() => {\n      Logger.instance.info('value =>>> ', this.fieldValue);\n    }, 1000);\n  }\n\n  private skeleton(): HTMLElement {\n    const field = document.createElement('div');\n    field.id = this.id;\n    field.className = 'otp-field';\n\n    // eslint-disable-next-line no-plusplus\n    for (let i = 0; i < this.config.boxCount; i++) {\n      field.appendChild(this.getBox(i));\n    }\n\n    return field;\n  }\n\n  private getBoxId(index: number) {\n    return `${this.config.namespace}-box-${index}`;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private getBoxIndex(box: HTMLInputElement) {\n    const dataIndex = box.getAttribute('data-index');\n    if (dataIndex) {\n      return parseInt(dataIndex, 10);\n    }\n\n    Logger.instance.log('box', box);\n    throw new Error('Unable to get `data-index` attribute for box');\n  }\n\n  private getBox(index: number) {\n    const box = document.createElement('input');\n    box.id = this.getBoxId(index);\n    box.type = 'text';\n    box.maxLength = 1;\n    box.autocomplete = 'off';\n    box.setAttribute('data-index', index.toString());\n\n    box.addEventListener('input', this.onBoxInput.bind(this));\n    box.addEventListener('keydown', this.onBoxKeyDown.bind(this));\n    box.addEventListener('focus', this.onBoxFocus.bind(this));\n    box.addEventListener('paste', this.onBoxPaste.bind(this));\n\n    return box;\n  }\n\n  onBoxPaste(e: any) {\n    e.preventDefault();\n\n    const pastedText: string = e.clipboardData.getData('text');\n    const pastedValue = pastedText.replace(this.regex, '');\n\n    Logger.instance.log('pasted value', pastedValue);\n\n    const currentBoxIndex = this.getBoxIndex(e.target);\n\n    Logger.instance.log('Current box index', currentBoxIndex);\n\n    const maxLength = Math.min(\n      this.config.boxCount - currentBoxIndex,\n      pastedValue.length\n    );\n\n    Logger.instance.log('maxLength', maxLength);\n\n    for (\n      let i = 0;\n      i < maxLength;\n      // eslint-disable-next-line no-plusplus\n      i++\n    ) {\n      this.setBoxValue(currentBoxIndex + i, pastedValue[i]);\n    }\n\n    Logger.instance.info('config.onPasteBlur', this.config.onPasteBlur);\n    if (this.config.onPasteBlur) {\n      Logger.instance.info('Blur box');\n      e.target.blur();\n    } else {\n      Logger.instance.info('Focus box');\n      this.focusBox(currentBoxIndex + maxLength - 1);\n    }\n\n    this.updateValue();\n  }\n\n  updateValue() {\n    let value = '';\n\n    // eslint-disable-next-line no-plusplus\n    for (let i = 0; i < this.config.boxCount; i++) {\n      value += this.getBoxValue(i);\n    }\n\n    Logger.instance.log('value', this.fieldValue, 'new value', value);\n    this.fieldValue = value;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  onBoxFocus(e: any) {\n    Logger.instance.info('focus', e);\n\n    // if current box have value select all\n    if (e.target.value.length === 1) {\n      Logger.instance.log(\n        'Select all value for current box, as value of current box not empty',\n        e.target.value\n      );\n      e.target.selectionStart = 0;\n      e.target.selectionEnd = 1;\n    }\n  }\n\n  onBoxKeyDown(e: any) {\n    Logger.instance.log('keydown', e);\n\n    if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\n      Logger.instance.info('Key:ArrowLeft-ArrowUp move focus to prev box');\n      e.preventDefault();\n      this.focusPrevBox(e.target);\n    }\n\n    if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\n      e.preventDefault();\n      Logger.instance.info('Key:ArrowRight-ArrowUp move focus to next box');\n      this.focusNextBox(e.target);\n    }\n\n    if (\n      e.key === 'Backspace' &&\n      (e.target.value === '' || e.target.selectionEnd === 0)\n    ) {\n      Logger.instance.log('Key:Backspace move focus to prev box');\n      this.focusPrevBox(e.target);\n    }\n\n    if (\n      e.key === 'Delete' &&\n      (e.target.value === '' ||\n        (e.target.selectionStart !== 0 && e.target.selectionEnd === 1))\n    ) {\n      Logger.instance.log('Key:Delete move focus to next box');\n      this.focusNextBox(e.target);\n    }\n  }\n\n  onBoxInput(e: any) {\n    Logger.instance.info('input', e);\n\n    Logger.instance.log('Entered Value', e.target.value);\n\n    // replace unwanted values\n    const updatedValue = e.target.value.replace(this.regex, '');\n    Logger.instance.log('updatedValue Value', updatedValue);\n\n    e.target.value = updatedValue;\n\n    Logger.instance.log('Value updated', updatedValue);\n\n    // if current box value is empty do nothing\n    if (e.target.value !== '') {\n      Logger.instance.info(\n        'target box value is not empty move focus to next box'\n      );\n      this.focusNextBox(e.target);\n    }\n\n    this.updateValue();\n  }\n\n  focusNextBox(currentBox: HTMLInputElement) {\n    const currentBoxIndex = this.getBoxIndex(currentBox);\n    Logger.instance.info('currentBoxIndex', currentBoxIndex);\n    Logger.instance.log('config boxCount', this.config.boxCount);\n\n    Logger.instance.log(\n      'we need to jump to next box',\n      currentBoxIndex + 1 < this.config.boxCount\n    );\n\n    // if current box index is less than no of box count\n    if (currentBoxIndex + 1 < this.config.boxCount) {\n      Logger.instance.log('Focusing to next box at index', currentBoxIndex + 1);\n      this.focusBox(currentBoxIndex + 1);\n    }\n  }\n\n  focusPrevBox(currentBox: HTMLInputElement) {\n    const currentBoxIndex = this.getBoxIndex(currentBox);\n    Logger.instance.info('currentBoxIndex', currentBoxIndex);\n\n    Logger.instance.log(\n      'we need to jump to prev box',\n      currentBoxIndex - 1 >= 0\n    );\n\n    // if current box index is grater than or equal to zero\n    if (currentBoxIndex - 1 >= 0) {\n      Logger.instance.log('Focusing to next box at index', currentBoxIndex + 1);\n      this.focusBox(currentBoxIndex - 1);\n    }\n  }\n\n  focusBox(index: number) {\n    const box = this.getBoxAtIndex(index);\n    Logger.instance.info('Focusing to Box', box);\n\n    box.focus();\n  }\n\n  private setBoxValue(index: number, value: string) {\n    Logger.instance.log(`Setting box at index ${index} value to ${value}`);\n\n    const box = this.getBoxAtIndex(index);\n    box.value = value;\n  }\n\n  private getBoxValue(index: number) {\n    Logger.instance.log(`Getting box at index ${index} value`);\n\n    const box = this.getBoxAtIndex(index);\n    return box.value;\n  }\n\n  private getBoxAtIndex(index: number) {\n    const boxId = this.getBoxId(index);\n    const box = document.getElementById(boxId);\n\n    if (box === null) {\n      throw new Error(`Unable to get box at index ${index}`);\n    }\n\n    return box as HTMLInputElement;\n  }\n\n  get id(): string {\n    return `otp-field-${this.config.namespace}`;\n  }\n\n  get element(): HTMLElement {\n    return document.getElementById(this.id)!;\n  }\n\n  destroy(): void {\n    this.element.remove();\n  }\n\n  build(parentElement: HTMLElement) {\n    parentElement.appendChild(this.skeleton());\n  }\n}\n","import OTPField from './components/field';\r\n// import Logger from './utils/logger';\r\n\r\nwindow.onload = () => {\r\n  // Logger.instance.setLevel('warn');\r\n\r\n  // create otp field instance\r\n  const otpField = new OTPField({\r\n    namespace: 'example',\r\n    boxCount: 6,\r\n    onPasteBlur: true,\r\n  });\r\n\r\n  // TODO: add for to get config and add button to show current value\r\n\r\n  // build otp field\r\n  otpField.build(document.body);\r\n};\r\n","import { LogLevel } from './types';\r\n\r\nexport default class Logger {\r\n  // eslint-disable-next-line no-use-before-define\r\n  private static _instance?: Logger;\r\n\r\n  private logLevels: Array<LogLevel> = ['log', 'info', 'warn', 'error'];\r\n\r\n  private logLevel: LogLevel = 'log';\r\n\r\n  // eslint-disable-next-line no-useless-constructor, no-empty-function\r\n  private constructor() { }\r\n\r\n  setLevel(logLevel: LogLevel) {\r\n    // Set the log level\r\n    this.logLevel = logLevel;\r\n  }\r\n\r\n  static get instance() {\r\n    // eslint-disable-next-line no-underscore-dangle\r\n    if (Logger._instance === undefined) {\r\n      // eslint-disable-next-line no-underscore-dangle\r\n      Logger._instance = new Logger();\r\n    }\r\n    // eslint-disable-next-line no-underscore-dangle\r\n    return Logger._instance;\r\n  }\r\n\r\n  // Helper method to get the current timestamp\r\n  // eslint-disable-next-line class-methods-use-this\r\n  private getTimestamp(): string {\r\n    const now = new Date();\r\n    return now.toISOString();\r\n  }\r\n\r\n  // Method to check if a message should be logged based on log level\r\n  private shouldLog(level: LogLevel): boolean {\r\n    const currentLevelIndex = this.logLevels.indexOf(this.logLevel);\r\n    const messageLevelIndex = this.logLevels.indexOf(level);\r\n    return messageLevelIndex >= currentLevelIndex;\r\n  }\r\n\r\n  // Main log method that accepts multiple arguments\r\n  public log(...args: unknown[]): void {\r\n    if (this.shouldLog('log')) {\r\n      // eslint-disable-next-line no-console\r\n      console.log(\r\n        '%cLOG:',\r\n        'color: white; background-color: #405d27',\r\n        `[${this.getTimestamp()}]`,\r\n        ...args\r\n      );\r\n    }\r\n  }\r\n\r\n  // Method to log errors\r\n  public error(...args: unknown[]): void {\r\n    if (this.shouldLog('error')) {\r\n      // eslint-disable-next-line no-console\r\n      console.error(\r\n        '%cERROR:',\r\n        'color: white; background-color: #c94c4c',\r\n        `[${this.getTimestamp()}]`,\r\n        ...args\r\n      );\r\n    }\r\n  }\r\n\r\n  // Method to log warnings\r\n  public warn(...args: unknown[]): void {\r\n    if (this.shouldLog('warn')) {\r\n      // eslint-disable-next-line no-console\r\n      console.warn(\r\n        '%cWARNING:',\r\n        'color: black; background-color: #feb236',\r\n        `[${this.getTimestamp()}]`,\r\n        ...args\r\n      );\r\n    }\r\n  }\r\n\r\n  // Method to log info\r\n  public info(...args: unknown[]): void {\r\n    if (this.shouldLog('info')) {\r\n      // eslint-disable-next-line no-console\r\n      console.info(\r\n        '%cINFO:',\r\n        'color: white; background-color: #4040a1',\r\n        `[${this.getTimestamp()}]`,\r\n        ...args\r\n      );\r\n    }\r\n  }\r\n}\r\n"]}