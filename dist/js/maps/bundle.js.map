{"version":3,"sources":["node_modules/browser-pack/_prelude.js","bundle.js","src/ts/components/field.ts","src/ts/main.ts","src/ts/utils/logger.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","__importDefault","mod","__esModule","default","value","logger_1","OTPField","config","instance","TypeError","_classCallCheck","this","regex","boxCount","setInterval","field","document","createElement","id","className","appendChild","getBox","index","namespace","box","dataIndex","getAttribute","parseInt","log","getBoxId","type","maxLength","autocomplete","setAttribute","toString","addEventListener","onBoxInput","bind","onBoxKeyDown","onBoxFocus","onBoxPaste","preventDefault","pastedValue","clipboardData","getData","replace","currentBoxIndex","getBoxIndex","warn","Math","min","boxId","getElementById","blur","info","selectionStart","selectionEnd","focusPrevBox","focusNextBox","updatedValue","updateValue","currentBox","focusBox","focus","element","remove","parentElement","skeleton","get","field_1","window","onload","setLevel","build","body","Logger","logLevels","logLevel","Date","toISOString","level","currentLevelIndex","indexOf","shouldLog","_console","_len","arguments","args","Array","_key","console","apply","getTimestamp","concat","_console2","_len2","_key2","error","_console3","_len3","_key3","_console4","_len4","_key4","undefined","_instance"],"mappings":"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","file":"../bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",null,"import Logger from '../utils/logger';\nimport { OTPFieldConfig } from './types';\n\nexport default class OTPField {\n  config: OTPFieldConfig;\n\n  // TODO: move it to config and set current value as default\n  regex = /[^0-9]/g;\n\n  value = '';\n\n  constructor(config: OTPFieldConfig) {\n    if (config.boxCount <= 0) {\n      throw new Error('Invalid config box count must be grater than zero.');\n    }\n\n    this.config = config;\n\n    setInterval(() => {\n      // console.log('value =>>> ', this.value);\n    }, 1000);\n  }\n\n  private skeleton(): HTMLElement {\n    const field = document.createElement('div');\n    field.id = this.id;\n    field.className = 'otp-field';\n\n    // eslint-disable-next-line no-plusplus\n    for (let i = 0; i < this.config.boxCount; i++) {\n      field.appendChild(this.getBox(i));\n    }\n\n    return field;\n  }\n\n  private getBoxId(index: number) {\n    return `${this.config.namespace}-box-${index}`;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private getBoxIndex(box: HTMLInputElement) {\n    const dataIndex = box.getAttribute('data-index');\n    if (dataIndex) {\n      return parseInt(dataIndex, 10);\n    }\n\n    Logger.instance.log('box', box);\n    throw new Error('Unable to get `data-index` attribute for box');\n  }\n\n  private getBox(index: number) {\n    const box = document.createElement('input');\n    box.id = this.getBoxId(index);\n    box.type = 'text';\n    box.maxLength = 1;\n    box.autocomplete = 'off';\n    box.setAttribute('data-index', index.toString());\n\n    // TODO: once box is focused user now can able to click on 0 selection position\n    // box.addEventListener('change', this.onBoxChange.bind(this));\n    box.addEventListener('input', this.onBoxInput.bind(this));\n    box.addEventListener('keydown', this.onBoxKeyDown.bind(this));\n    box.addEventListener('focus', this.onBoxFocus.bind(this));\n    // box.addEventListener('click', this.onBoxClick.bind(this));\n    box.addEventListener('paste', this.onBoxPaste.bind(this));\n\n    return box;\n  }\n\n  // // TODO: after paste only first box is focused\n  // // TODO: not working in paste in middle\n  onBoxPaste(e: any) {\n    e.preventDefault();\n\n    const pastedText: string = e.clipboardData.getData('text');\n    const pastedValue = pastedText.replace(this.regex, '');\n\n    Logger.instance.log('pasted value', pastedValue);\n\n    const currentBoxIndex = this.getBoxIndex(e.target);\n\n    Logger.instance.warn('Current box index', currentBoxIndex);\n\n    const maxLength = Math.min(\n      this.config.boxCount - currentBoxIndex,\n      pastedValue.length\n    );\n\n    Logger.instance.warn('maxLength', currentBoxIndex, maxLength);\n\n    for (\n      let i = 0;\n      i < maxLength;\n      // eslint-disable-next-line no-plusplus\n      i++\n    ) {\n      const boxId = this.getBoxId(currentBoxIndex + i);\n      const box = document.getElementById(boxId) as HTMLInputElement;\n      box.value = pastedValue[i];\n    }\n\n    // const boxId = this.getBoxId(currentBoxIndex + maxLength - 1);\n    // const box = document.getElementById(boxId) as HTMLInputElement;\n    // box.focus();\n    e.target.blur();\n  }\n\n  updateValue() {\n    let value = '';\n\n    // eslint-disable-next-line no-plusplus\n    for (let i = 0; i < this.config.boxCount; i++) {\n      const boxId = `${this.config.namespace}-box-${i}`;\n      const box = document.getElementById(boxId) as HTMLInputElement;\n      value += box.value;\n    }\n\n    Logger.instance.log('value', this.value, 'new value', value);\n    this.value = value;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  onBoxFocus(e: any) {\n    Logger.instance.info('focus', e);\n\n    // if current box have value select all\n    if (e.target.value.length === 1) {\n      Logger.instance.log(\n        'Select all value for current box, as value of current box not empty ->',\n        e.target.value\n      );\n      e.target.selectionStart = 0;\n      e.target.selectionEnd = 1;\n    }\n  }\n\n  onBoxKeyDown(e: any) {\n    Logger.instance.log('keydown', e);\n\n    if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\n      Logger.instance.info('Key:ArrowLeft-ArrowUp move focus to prev box');\n      e.preventDefault();\n      this.focusPrevBox(e.target);\n    }\n\n    if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\n      e.preventDefault();\n      Logger.instance.info('Key:ArrowRight-ArrowUp move focus to next box');\n      this.focusNextBox(e.target);\n    }\n\n    if (\n      e.key === 'Backspace' &&\n      (e.target.value === '' || e.target.selectionEnd === 0)\n    ) {\n      Logger.instance.log('Key:Backspace move focus to prev box');\n      this.focusPrevBox(e.target);\n    }\n\n    if (\n      e.key === 'Delete' &&\n      (e.target.value === '' ||\n        (e.target.selectionStart !== 0 && e.target.selectionEnd === 1))\n    ) {\n      Logger.instance.log('Key:Delete move focus to next box');\n      this.focusNextBox(e.target);\n    }\n  }\n\n  onBoxInput(e: any) {\n    Logger.instance.info('input', e);\n\n    Logger.instance.log('Entered Value', e.target.value);\n\n    // replace unwanted values\n    const updatedValue = e.target.value.replace(this.regex, '');\n    Logger.instance.log('updatedValue Value', updatedValue);\n\n    e.target.value = updatedValue;\n\n    Logger.instance.log('Value updated', updatedValue);\n\n    // if current box value is empty do nothing\n    if (e.target.value !== '') {\n      Logger.instance.info(\n        'target box value is not empty move focus to next box'\n      );\n      this.focusNextBox(e.target);\n    }\n\n    this.updateValue();\n  }\n\n  focusNextBox(currentBox: HTMLInputElement) {\n    const currentBoxIndex = this.getBoxIndex(currentBox);\n    Logger.instance.info('currentBoxIndex', currentBoxIndex);\n    Logger.instance.log('config boxCount', this.config.boxCount);\n\n    Logger.instance.log(\n      'we need to jump to next box',\n      currentBoxIndex + 1 < this.config.boxCount\n    );\n\n    // if current box index is less than no of box count\n    if (currentBoxIndex + 1 < this.config.boxCount) {\n      Logger.instance.log('Focusing to next box at index', currentBoxIndex + 1);\n      this.focusBox(currentBoxIndex + 1);\n      //   if (nextBox.value.length) {\n      //     console.log('select all');\n      //     nextBox.selectionEnd = 1;\n      //   }\n    }\n  }\n\n  focusPrevBox(currentBox: HTMLInputElement) {\n    const currentBoxIndex = this.getBoxIndex(currentBox);\n    Logger.instance.info('currentBoxIndex', currentBoxIndex);\n\n    Logger.instance.log(\n      'we need to jump to prev box',\n      currentBoxIndex - 1 >= 0\n    );\n\n    // if current box index is grater than or equal to zero\n    if (currentBoxIndex - 1 >= 0) {\n      Logger.instance.log('Focusing to next box at index', currentBoxIndex + 1);\n      this.focusBox(currentBoxIndex - 1);\n    }\n  }\n\n  focusBox(index: number) {\n    const boxId = this.getBoxId(index);\n\n    const box = document.getElementById(boxId) as HTMLInputElement;\n    Logger.instance.info('Focusing to Box', box);\n\n    box.focus();\n  }\n\n  get id(): string {\n    return `otp-field-${this.config.namespace}`;\n  }\n\n  get element(): HTMLElement {\n    return document.getElementById(this.id)!;\n  }\n\n  destroy(): void {\n    this.element.remove();\n  }\n\n  build(parentElement: HTMLElement) {\n    parentElement.appendChild(this.skeleton());\n  }\n}\n","import OTPField from './components/field';\r\nimport Logger from './utils/logger';\r\n\r\nwindow.onload = () => {\r\n  Logger.instance.setLevel('warn');\r\n\r\n  // create otp field instance\r\n  const otpField = new OTPField({\r\n    namespace: 'example',\r\n    boxCount: 6,\r\n  });\r\n\r\n  // TODO: add for to get config and add button to show current value\r\n\r\n  // build otp field\r\n  otpField.build(document.body);\r\n};\r\n","import { LogLevel } from './types';\n\nexport default class Logger {\n  // eslint-disable-next-line no-use-before-define\n  private static _instance?: Logger;\n\n  private logLevels: Array<LogLevel> = ['log', 'info', 'warn', 'error'];\n\n  private logLevel: LogLevel = 'log';\n\n  // eslint-disable-next-line no-useless-constructor, no-empty-function\n  private constructor() { }\n\n  setLevel(logLevel: LogLevel) {\n    // Set the log level\n    this.logLevel = logLevel;\n  }\n\n  static get instance() {\n    // eslint-disable-next-line no-underscore-dangle\n    if (Logger._instance === undefined) {\n      // eslint-disable-next-line no-underscore-dangle\n      Logger._instance = new Logger();\n    }\n    // eslint-disable-next-line no-underscore-dangle\n    return Logger._instance;\n  }\n\n  // Helper method to get the current timestamp\n  // eslint-disable-next-line class-methods-use-this\n  private getTimestamp(): string {\n    const now = new Date();\n    return now.toISOString();\n  }\n\n  // Method to check if a message should be logged based on log level\n  private shouldLog(level: LogLevel): boolean {\n    const currentLevelIndex = this.logLevels.indexOf(this.logLevel);\n    const messageLevelIndex = this.logLevels.indexOf(level);\n    return messageLevelIndex >= currentLevelIndex;\n  }\n\n  // Main log method that accepts multiple arguments\n  public log(...args: unknown[]): void {\n    if (this.shouldLog('log')) {\n      // eslint-disable-next-line no-console\n      console.log(\n        '%cLOG:',\n        'color: white; background-color: #405d27',\n        `[${this.getTimestamp()}]`,\n        ...args\n      );\n    }\n  }\n\n  // Method to log errors\n  public error(...args: unknown[]): void {\n    if (this.shouldLog('error')) {\n      // eslint-disable-next-line no-console\n      console.error(\n        '%cERROR:',\n        'color: white; background-color: #c94c4c',\n        `[${this.getTimestamp()}]`,\n        ...args\n      );\n    }\n  }\n\n  // Method to log warnings\n  public warn(...args: unknown[]): void {\n    if (this.shouldLog('warn')) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '%cWARNING:',\n        'color: black; background-color: #feb236',\n        `[${this.getTimestamp()}]`,\n        ...args\n      );\n    }\n  }\n\n  // Method to log info\n  public info(...args: unknown[]): void {\n    if (this.shouldLog('info')) {\n      // eslint-disable-next-line no-console\n      console.info(\n        '%cINFO:',\n        'color: white; background-color: #4040a1',\n        `[${this.getTimestamp()}]`,\n        ...args\n      );\n    }\n  }\n}\n"]}